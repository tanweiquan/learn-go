谈一下设计理念/参与项目的亮点？
* 高内聚低耦合：将不同的功能划分到不同的模块，遵从划分原则的就是让模块本身高内聚，模块之间低耦合；
* 单一职责原则：模块的设计要尽量职责单一，分层的一个目的也是为了符合单一职责原则；
* 依赖注入：在MVC三层结构的代码实现中，下一层的类通过依赖注入的方式注入到上一层代码中；
* 依赖反转原则：通过类似Spring IOC这样的容器来管理对象的创建、生命周期等，就使用到依赖反转原则；
* 基于接口而非实现编程：Service层使用Dao层提供的接口，并不关心其底层是依赖的哪种具体数据库，遵从的就是基于接口而非实现编程的设计思想；
* 封装、抽象：分层体现了抽象和封装的设计思想，能够隔离变化和关注点；
* DRY、继承和组合：尽管VO、BO、Entity存在重复代码，但是功能语义不同，并不违反DRY原则，但为了解决代码重复问题，我们用到了继承或组合；
* 面向对象设计：将合适的代码放入合适的类中，将合适的功能放入合适的模块中；