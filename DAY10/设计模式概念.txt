设计模式的六大基本原则
1、开闭原则
对扩展开放，对修改关闭。
2、里氏代换原则              <------这里是类的继承，也就是结构体的继承，暴露了实现的细节
子类继承父类时，除添加新的方法完成新增功能外，尽量不要重写父类的方法。    
3、依赖倒置原则  <----使用接口，而不去涉及任何具体的操作，把展现细节的任务交给它们的实现类去完成。
要面向接口编程，不要面向实现编程。
4、接口隔离原则  <----保持接口的最小化，同一接口不能让不同类滥用
要为各个类建立它们需要的专用接口，而不要试图去建立一个很庞大的接口供所有依赖它的类去调用
5、最少知道原则
一个类应避免直接调用其他类的方法。当其中的一个类需要调用另一个类的某一个方法的话，可以通过中介类转发这个调用。
应该设置一个可以调用其他类方法的中介类。这个中介类都可以让其他类调用方法。
6、合成复用原则             <-------这里是对象的继承，不暴露实现细节，保持了封装性
合成复用原则是通过将已有的对象纳入新对象中，作为新对象的成员对象来实现的，新对象可以调用已有对象的功能，从而达到复用。   
