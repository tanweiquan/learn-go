1·包：像一个包，包里装着名为xx.go的源文件；
在源文件里要用package声明这个源文件属于哪个包，且同一目录下，所有源文件必须使用相同的包名称；
一个项目只有一个main包，main包下可以分成多个源文件，可以对该源文件分别执行；
但假如main包下有一个源文件的，且该源文件里需要调用的方法\函数\变量是属于main包的其他源文件的，
则单纯运行该源文件是调用不了其他源文件的函数\方法的，要go build编译后才能执行成功。
**注意在同包内不同源文件的全局变量是否冲突
**注意在同一目录下只能存在一个包

2·文件：源文件，文件名没啥限制（扩展名为.go）。

3·import 导入的参数是路径，而非包名。路径为：src后开始到包的目录路径。

4·同目录下的同包是不需要导入的，且在同包下的不同源文件下调用函数\方法\变量均不用大写。

5.在不同目录下，如果要导入包，格式为：import 包名 包的目录路径。

6.包名最好使用目录名

补充知识点：SDK与API的区别

API的定义
系统层面：
操作系统绑定了计算机所有的硬件资源，程序想要做什么，就要按照操作系统定的规则来操作，
操作系统不允许程序亲自进入它的内部，因为会造成系统的不稳定，威胁自身的安全。
操作系统提供程序一个名为api的箱子，程序唯一能做的就是把需求放入箱子，稍后就可以从箱子中
取出想要的数据，或实现需要的功能，因此api是一种交互机制，系统提供箱子，程序只能通过
箱子，在严格限制中和系统打交道。
由于操作系统是以函数的形式提供箱子，因此也常把api称作api函数，即程序通过调用os的函数实现功能或获得数据
程序层面：
预先定义了一些函数在api标准包里，当外部调用这些函数时，不需要访问源码就可以实现函数提供的功能。
作为中间件：
API以明确的方式与某一系统进行交互，无须了解该系统的任何实现细节。企业通常会开发自己的API，让其他应用利用它们的服务和数据。

例：
百度向其他应用软件开放API以出售GPS数据。
比如主流打车软件滴滴在软件开发中使用了GPS API（定位），短信API（信息）和支付API，而不是自主开发每一个功能。
因此api除了以函数形式存在，api还以网址链接的形式等存在。
.......................................
理解：其实就是别人已经写好的可以实现特定功能的函数，而你只需要根据他提供好的接口，也就是调用他的方法，传入他规定的参数，然后这个函数就会帮你实现这些功能。
...............................................
SDK的定义
sdk是软件开发工具包，软件开发工具广义上指辅助开发某一类软件的相关文档、范例和工具的集合。
软件开发工具包是一些被软件工程师用于为特定的软件包、软件框架、硬件平台、操作系统等创建应用软件的开发工具的集合。
它可以简单的是某个程序设计语言提供应用程序接口API的一些文件，但也可能包括能与某种嵌入式系统通讯的复杂的硬件。
........................................
理解：如果你想组装一个模型车，在构建这个模型时，需要一整套物品去组装，那么SDK相当于组装它们所需的工具，包括装配说明等等。
...................................................
SDK想象成一个虚拟的程序包，在这个程序包中有一份做好的软件功能，
这份程序包几乎是全封闭的，只有一个小小接口可以联通外界，这个接口就是API。


关于依赖包
在使用go mod模式时，go下载的依赖包在src/pkg/mod/里,使用go mod模式可以在gopath外创建项目
执行go mod init 生成的go.mod文件在该项目目录（即源代码文件的目录）
当想要给既有源代码的文件生成go.mod文件,在该源代码文件的目录下，直接执行go mod init
当要在没有代码文件的项目目录下新建go.mod文件，则执行go mod init 项目目录名