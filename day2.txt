【网络协议】 什么是TCP协议？为什么需要 TCP 协议？ TCP 协议工作在哪一层？
难度：简单
考点：OSI七层模型
参考：
1、 TCP协议是一个面向连接（一对一连接）、可靠的（保证报文能被接受）、基于字节流（流式传输，数据没有边界）的传输层通信协议；
2、 需要TCP协议的主要原因在于它的下一层也就是网络层（IP层）是不可靠的，它不保证数据包的完整性，也不能保障按顺序交付，而这些工作都可以交由位于传输层的TCP协议来完成；

【网络协议】谈一下如何唯一标识一个TCP连接？
难度：简单
参考：
* TCP四元组可以为唯一确认一个链接，它包括：源地址、源端口、目的地址、目的端口；
* 源地址和目的地址（32位字段）是在IP头部，通过IP协议发送报文给对方主机；（有问再说）
* 源端口和目的端口（16位字段）是在TCP头部，通过TCP协议发送报文给对方进程；（有问再说）

【网络协议】谈一下TCP和UDP的区别（随后询问什么时候使用UDP，举例场景或协议）；
  难度：简单
考点：UDP使用场景的考察；
参考：
* TCP面向连接的协议，建立连接需要经过三次握手，具备数据重传机制、流量控制、拥堵控制；
* UDP是无连接协议，没有重试机制和拥堵控制，支持一对一、一对多、多对于的交互通信；
* 在使用场景上，UDP适合需要处理速度快、时延低，不需要建立链接，可以广播的应用，需要资源少，在网络情况比较好的内网或对丢包不敏感的应用，使用UDP比较多的场景是DNS的域名解析、视频音频等流媒体；TCP的使用场景在工作中会接触得比较多，如HTTP、HTTPS和FTP等；
【网络协议】TCP为什么需要三次握手（随后询问TCP三次握手的过程）
  为了防止产生错误的连接，TCP需要三次握手。
 TCP三次握手的过程如下：
1、客户端发送SYN（SEQ=x）报文给服务器端，进入SYN_SEND状态。
2、服务器端收到SYN报文，回应一个SYN （SEQ=y）ACK（ACK=x+1）报文，进入SYN_RECV状态。
3、客户端收到服务器端的SYN报文，回应一个ACK（ACK=y+1）报文，进入Established状态。
三次握手完成，TCP客户端和服务器端成功地建立连接，可以开始传输数据了
拓展：
注意：FIN的接收也作为一个文件结束符（end-of-file）传递给接收端应用进程，放在已排队等候该应用进程接收的任何其他数据之后，因为，FIN的接收意味着接收端应用进程在相应连接上再无额外数据可接收。

【网络协议】谈一下TCP四次挥手的过程
（1） 客户端首先调用close函数，称该端执行“主动关闭”。发送一个FIN报文，表示要关闭连接，状态由ESTABLISHED进入FIN_WAIT_1状态，完成第一次挥手。
（2） 服务端接收到这个FIN报文后执行 “被动关闭”并给已等候的数据添加文件结束符EOF，并发送一个ACK报文，然后进入CLOSE_WAIT状态，等待一段时间，让数据全部发送完毕。而客户端收到ACK报文，由FIN_WAIT_1进入FIN_WAIT_2状态，完成第二次挥手。
（3） 当服务端读取到数据的文件结束符EOF，随后调用close函数，关闭socket，并发送FIN报文给客户端，服务端由CLOSED_WAIT进入LAST_ACK（最后确认）状态，完成第三次挥手。
（4） 当客户端收到FIN报文后，发送一个ACK给服务端，并进入TIME_WAIT状态，服务端收到ACK报文后由LAST_ACK进入CLOSE状态，而客户端等待了2MSL后，依旧没有回复，证明服务端已经正常关闭了，然后客户端就会由TIME_WAIT进入CLOSED状态，完成第四次挥手。
四次挥手完成后，TCP就关闭了。
【网络协议】谈一下TCP/IP协议各分层的作用？
参考：
1. 数据链路层的ARP协议（地址关系协议 Address Resolution Protocol）可以根据通信双方的IP地址查询出MAC地址，给到网络层使用；
2. 网络层的IP协议负责把各种数据包传递给对方，但不保证数据包是否成功到达，也不维护它们的传送顺序，这个过程需要IP地址和MAC地址；
3. 运输层的TCP协议负责提供可靠的字节流服务，保证数据包的顺序和准确性；
4. 应用层的HTTP协议、DNS协议等负责处理具体场景；